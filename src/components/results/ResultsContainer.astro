---

---

<div id="results" class="space-y-4"></div>

<script>
  const resultsContainer = document.getElementById("results");

  function showResults(html: string) {
    if (resultsContainer) {
      resultsContainer.innerHTML = html;
    }
  }

  // Suscribirse al evento de búsqueda
  document
    .getElementById("searchForm")
    ?.addEventListener("submit", async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target as HTMLFormElement);

      if (!formData.get("query")) {
        showResults(
          '<p class="text-red-500">Por favor, ingresa un término de búsqueda</p>'
        );
        return;
      }

      try {
        showResults('<p class="text-blue-500">Buscando...</p>');

        const response = await fetch("/api/search", {
          method: "POST",
          body: formData,
        });

        const data = await response.json();

        if (data.error) {
          throw new Error(data.error);
        }

        if (!data.results || data.results.length === 0) {
          showResults(
            '<p class="text-gray-500">No se encontraron resultados</p>'
          );
          return;
        }

        const bestMatch = data.results[0];

        if (bestMatch.similarity < 0.5) {
          showResults(
            '<p class="text-gray-500">No se encontraron coincidencias relevantes</p>'
          );
          return;
        }

        // Usar el componente SearchResult para renderizar
        const resultHtml = `
        <div class="bg-white border rounded-lg shadow-sm">
          <div class="p-4 border-b bg-gray-50">
            <h2 class="text-xl font-semibold text-gray-800">Mejor coincidencia</h2>
            <p class="text-sm text-gray-600 mt-1">
              Archivo: ${bestMatch.filename}
              <a href="/${bestMatch.filePath}" target="_blank" 
                 class="ml-2 text-blue-500 hover:underline inline-flex items-center">
                Ver documento completo
                <svg class="w-4 h-4 ml-1" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                        d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                </svg>
              </a>
            </p>
          </div>
          
          <div class="p-4">
            <div class="mb-4">
              <div class="flex items-center justify-between mb-2">
                <span class="text-sm font-medium text-gray-700">Relevancia</span>
                <span class="text-sm font-semibold text-blue-600">
                  ${(bestMatch.similarity * 100).toFixed(2)}%
                </span>
              </div>
              <div class="w-full bg-gray-200 rounded-full h-2">
                <div class="bg-blue-600 h-2 rounded-full" 
                     style="width: ${(bestMatch.similarity * 100).toFixed(2)}%"></div>
              </div>
            </div>
            
            <div class="bg-gray-50 rounded-lg p-4">
              <p class="text-sm font-medium text-gray-700 mb-2">Fragmento encontrado:</p>
              <p class="text-gray-800">${bestMatch.text}</p>
            </div>
          </div>
        </div>
      `;

        showResults(resultHtml);
      } catch (error) {
        showResults(`
        <p class="text-red-500">
          Error: ${error instanceof Error ? error.message : "Error en la búsqueda"}
        </p>
      `);
      }
    });
</script>
